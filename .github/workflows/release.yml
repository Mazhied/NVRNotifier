name: Create release

on:
  push:
    tags:
      - 'v*' # Запускать пайплайн при пуше тега, начинающегося с 'v', например v1.0.0

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Log in to GitHub Container Registry
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # 4. Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=tag
            latest

      # 5. Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  create-release:
    needs: build-test-push
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Create GitHub Release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          body: |
            ## Docker Images
      
            This release includes the following Docker images:
      
            - `ghcr.io/${{ github.repository }}:${{ github.ref_name }}`
            - `ghcr.io/${{ github.repository }}:latest`
      
            ### Deployment
      
            ```bash
            docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}
            docker compose -f docker-compose.yml up -d
            ```
